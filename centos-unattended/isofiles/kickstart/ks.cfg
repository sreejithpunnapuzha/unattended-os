#version=DEVEL

# System authorization information
auth --enableshadow --passalgo=sha512

# Use CDROM installation media
cdrom

# Use graphical install
graphical

# Run the Setup Agent on first boot
firstboot --enable

# Accept Eula
eula --agreed

# Reboot afer installing
poweroff

# Keyboard layouts
keyboard --vckeymap=us --xlayouts='us'

# System language
lang en_US.UTF-8

# Firewall configuration
firewall --enable

# SELinux configuration
selinux --enforcing

# Network information
network  --bootproto=dhcp --device=link --onboot=yes --ipv6=auto --activate
network  --hostname=setupsvr.example.org

# Root password
rootpw --iscrypted "$6$20Bql4GrQfSKs5zx$i/W.IbRM4rglb2BzH1Jd5a4GI2S5IwSInzDX.yIQSuhnH3liqpHhdeMfYCJTDV09dwaogo.aacgS.agaeeQ6t0"

# System services
services --enabled="chronyd"

# System timezone
timezone America/Chicago --isUtc

# include the partitioning logic from the pre section.
%include /tmp/part-include

%pre
# pre section
#----- partitioning logic below--------------
# pick the first drive that is not removable and is over MINSIZE
DIR="/sys/block"

# minimum size of hard drive needed specified in GIGABYTES
MINSIZE=10

ROOTDRIVE=`lsblk -d | grep 'sd\|hd\|vd' | awk '{print $1}'|sort | head -1`

echo "ROOTDRIVE=$ROOTDRIVE"

cat << EOF > /tmp/part-include
zerombr
# System bootloader configuration
bootloader --append=" crashkernel=auto" --location=mbr --boot-drive=$ROOTDRIVE
# Partition clearing information
clearpart --linux --drives=$ROOTDRIVE --all --initlabel
autopart --type=lvm
EOF

%end

%packages
@^minimal
@core
chrony
kexec-tools
vim-minimal
rsync
curl

%end

%addon com_redhat_kdump --enable --reserve-mb='auto'

%end

%post
#Note- There you can also define your own script for your specific purpose.
# For Ex-
mkdir -p /root/.ssh
chmod 700 /root/.ssh
echo "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC+7bLbzRyWYP304SPFESxTWNCCmGA0nUV4oobrg3RJuU+fcmo22umcD0mIZJU17AM/F07T6ABsQZxrtV/62xLX9W14dOqfbsXKOIPP4iJQU7iDWUrxr8z48T4OKmi2hZ4kfO0HnFPsB+exXnxILacJKWcYPuCP0MI9QM4QL5XbvjPULCV93pGnGLPRODXrZIn/kNaj0dVsDtKfB+tEerJ8WRkiaaw4inSPboy13MK7hcStam8LIYgajWJQ7IV3qvkDlAhZ9Qxy9R60wB1m7jkP0gwHOhPsUF4OTjGVh9y9a4Oeq9ianA+FOApz+Lohqxk/IVZoM4IWeGYRLHN2vm3GTaeoOjt1mYlcFeXgN2ybqTaWpQnV3ntUPPmhYJxqrWup2WZdSRrQnN2V1Efx4yRKptCbHo2WNxnala1T+YKQMcQx8G5J4ETPXh22pD29D27r2SRgFgm7+WuPc81akzQODvkB0qbfrbyujmD8qve/6XN9i09YSXkgwyUCGxsuSFyQ/o6+0TAMbVFJAYFchaNWd5OWi+U3OIF7fmdkXakSTlTFyG/n2nC54ZrxM1FU21ooRB9GtFnTf3HqB9C1O8fGU3w2Gm8p9Zl7df3GTu9cGlAJJmaXkagBMSRuKIcgTQUZGcOMCMP753QNPDkZe/jowhaFfpqV3Nlr42fpeRQjvQ== iso-keys" > /root/.ssh/authorized_keys
chmod 600 /root/.ssh/authorized_keys
%end

%anaconda
pwpolicy root --minlen=6 --minquality=1 --notstrict --nochanges --notempty
pwpolicy user --minlen=6 --minquality=1 --notstrict --nochanges --emptyok
pwpolicy luks --minlen=6 --minquality=1 --notstrict --nochanges --notempty
%end
